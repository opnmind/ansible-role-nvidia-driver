---
#- name: Install epel-elease
#  yum: name=epel-release state=latest update_cache=yes disable_gpg_check=yes

#- name: Install Huawei Cloud Repo for CentOS-7 python36 package
#  yum_repository:
#    name: CentOS-7_Huawei-Repo
#    description: CentOS-7 Repo for python36
#    baseurl: https://mirrors.huaweicloud.com/centos/7/os/x86_64/
#    gpgkey: https://mirrors.huaweicloud.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7
#    gpgcheck: yes
#    enabled: yes

- name: get kernel version
  shell: uname -r
  args:
    executable: /bin/bash
  register: kernel_version

- name: Get actual kernel
  debug:
    msg: actual booted kernel version is {{ kernel_version }}.

- name: install dependencies
  yum:
    name: dkms
    state: present
    disable_gpg_check: yes

- name: Ensure GRUB_CMDLINE_LINUX is set for nvidia
  lineinfile:
    path: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX="
    line: GRUB_CMDLINE_LINUX="nouveau.modeset=0 rd.driver.blacklist=nouveau"

- name: add repo
  yum_repository:
    name: cuda
    description: NVIDIA CUDA YUM Repo
    baseurl: "{{ nvidia_driver_rhel_cuda_repo_baseurl }}"
    gpgkey: "{{ nvidia_driver_rhel_cuda_repo_gpgkey }}"

- name: install driver packages
  yum:
    name: "{{ nvidia_driver_package_version | ternary('cuda-drivers='+nvidia_driver_package_version, 'cuda-drivers') }}"
    state: "{{ nvidia_driver_package_state }}"
    autoremove: "{{ nvidia_driver_package_state == 'absent' }}"
    disable_gpg_check: yes
  register: install_driver

# The driver package pulls in the latest kernel-headers package, but not the
# latest kernel. Check to see if there is a mismatch.

- name: check kernel versions
  yum:
    list: kernel
  register: yum_list

- name: register installed kernel versions
  debug:
    msg: "{{ yum_list.results | selectattr('yumstate', 'equalto', 'installed') | list }}"
  register: kernel_versions

- debug:
    msg: installed kernel versions are  {{ kernel_versions }}.

- name: check kernel-headers versions
  yum:
    list: kernel-headers
  register: yum_list

- name: register installed kernel-headers versions
  debug:
    msg: "{{ yum_list.results | selectattr('yumstate', 'equalto', 'installed') | list }}"
  register: kernel_headers_versions

- name: update kernel if headers don't match
  yum:
    name:
      - kernel
      - kernel-tools
      - kernel-tools-libs
      - kernel-devel
      - kernel-debug-devel
      - kernel-headers
    state: latest
    disable_gpg_check: yes
  register: kernel_update
  when: kernel_versions.msg[0].release != kernel_headers_versions.msg[0].release

- name: regenerate initrd
  shell: dracut -f -v
  args:
    executable: /bin/bash
